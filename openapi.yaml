openapi: 3.0.0
info:
  title: Tarantool KV Storage API
  description: REST API for key-value storage using Tarantool.
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /kv:
    post:
      summary: Create a new key-value entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [key, value]
              properties:
                key:
                  type: string
                  example: "some_key"
                value:
                  type: object
                  additionalProperties: true
                  example: {"field1": "value1"}
      responses:
        "201":
          description: Successfully created entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "created"
                  key:
                    type: string
                    example: "some_key"
                  value:
                    type: object
                    additionalProperties: true
                    example: {"field1": "value1"}
        "400":
          description: Invalid request format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "invalid JSON format"
        "409":
          description: Key already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "key already exists"

  /kv/{id}:
    get:
      summary: Retrieve a key-value entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    example: "some_key"
                  value:
                    type: object
                    additionalProperties: true
                    example: {"field1": "value1"}
        "404":
          description: Key not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "key not found"

    put:
      summary: Update a key-value entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: object
                  additionalProperties: true
                  example: {"field1": "updated_value"}
      responses:
        "200":
          description: Successfully updated entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "updated"
                  key:
                    type: string
                    example: "some_key"
                  value:
                    type: object
                    additionalProperties: true
                    example: {"field1": "updated_value"}
        "400":
          description: Invalid request format
        "404":
          description: Key not found

    delete:
      summary: Delete a key-value entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted entry
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "deleted"
                  key:
                    type: string
                    example: "some_key"
                  value:
                    type: object
                    example: "some_value"
        "404":
          description: Key not found
